import triangles ./belly;
static parameter color bellyColor;

static parameter color eyeColor;
static parameter float eyeRadius;
static parameter int numEyeParts;

void produceCircle(float centerX, float centerY, float radius, color color, int numParts) {
	Vertex center;
	center.position = (centerX, centerY);
	center.color = color;
	
	for (0 <= part < numParts) {
		float angle1 = 360.0 * float(part) / float(numParts);
		float angle2 = 360.0 * float(part + 1) / float(numParts);

		Vertex v1;
		v1.position = (centerX + radius * cos(angle1), centerY + radius * sin(angle1));
		v1.color = color;

		Vertex v2;
		v2.position = (centerX + radius * cos(angle2), centerY + radius * sin(angle2));
		v2.color = color;

		produceTriangle(center, v2, v1);
	}
}

for (0 <= index < belly.size) {
	Vertex bellyVertex = belly[index];
	bellyVertex.color = bellyColor;
}

for (0 <= triangleIndex < belly.size / 3) {
	int index = 3 * triangleIndex;
	produceTriangle(belly[index], belly[index + 1], belly[index + 2]);
}

produceCircle(0.4, 0.15, eyeRadius, eyeColor, numEyeParts);
